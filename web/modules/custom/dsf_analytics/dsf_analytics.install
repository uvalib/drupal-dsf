<?php

/**
 * @file
 * Install, update and uninstall functions for the DSF Analytics module.
 */

/**
 * Implements hook_install().
 */
function dsf_analytics_install() {
  // Grant DSF Analytics permissions to the administrator role.
  $permissions = [
    'access dsf analytics',
    'administer dsf analytics',
  ];
  
  // Check if administrator role exists and grant permissions.
  $role_storage = \Drupal::entityTypeManager()->getStorage('user_role');
  $administrator_role = $role_storage->load('administrator');
  
  if ($administrator_role) {
    foreach ($permissions as $permission) {
      $administrator_role->grantPermission($permission);
    }
    $administrator_role->save();
    
    \Drupal::messenger()->addStatus(t('DSF Analytics permissions have been granted to the administrator role.'));
  }
  
  // Set default configuration values.
  $config = \Drupal::configFactory()->getEditable('dsf_analytics.settings');
  $config->set('matomo_enabled', TRUE);
  $config->set('matomo_site_id', 1);
  $config->set('matomo_url', 'https://analytics.lib.virginia.edu/');
  $config->set('tracking_mode', 'PROD');
  $config->set('data_mode', 'real');
  $config->set('dsf_pages', "/dsf\n/digital-service-finder\n/services\n/find-services\n/finder\n/");
  $config->set('investigation_types', [
    'details_view' => 'Details View',
    'added_to_comparison' => 'Added To Comparison',
    'removed_from_comparison' => 'Removed From Comparison',
    'external_link_click' => 'External Link Click',
    'deep_dive' => 'Deep Dive',
    'quick_view' => 'Quick View',
  ]);
  $config->save();
}

/**
 * Update configuration for existing installations.
 */
function dsf_analytics_update_8001() {
  $config = \Drupal::configFactory()->getEditable('dsf_analytics.settings');
  
  // Set missing configuration values if they don't exist
  if (!$config->get('matomo_enabled')) {
    $config->set('matomo_enabled', TRUE);
  }
  if (!$config->get('matomo_site_id')) {
    $config->set('matomo_site_id', 1);
  }
  if (!$config->get('matomo_url')) {
    $config->set('matomo_url', 'https://analytics.lib.virginia.edu/');
  }
  if (!$config->get('tracking_mode')) {
    $config->set('tracking_mode', 'PROD');
  }
  
  $config->save();
  
  \Drupal::messenger()->addStatus(t('DSF Analytics configuration has been updated with missing Matomo settings.'));
}

/**
 * Implements hook_uninstall().
 */
function dsf_analytics_uninstall() {
  // Remove DSF Analytics permissions from all roles.
  $permissions = [
    'access dsf analytics',
    'administer dsf analytics',
  ];
  
  $role_storage = \Drupal::entityTypeManager()->getStorage('user_role');
  $roles = $role_storage->loadMultiple();
  
  foreach ($roles as $role) {
    foreach ($permissions as $permission) {
      if ($role->hasPermission($permission)) {
        $role->revokePermission($permission);
        $role->save();
      }
    }
  }
  
  // Remove all DSF Analytics configuration.
  $config = \Drupal::configFactory()->getEditable('dsf_analytics.settings');
  $config->delete();
  
  // Clear any cached configuration.
  \Drupal::service('config.factory')->reset('dsf_analytics.settings');
  
  // Clear all caches to remove any cached module data.
  drupal_flush_all_caches();
  
  \Drupal::messenger()->addStatus(t('DSF Analytics permissions, configuration, and all cached data have been completely removed.'));
}
